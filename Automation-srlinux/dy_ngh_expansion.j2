{# Define grupos spine e leaf baseado em nomes ou custom fields #}
{% set spines = groups['all'] | select('search', 'Spine') | list %}
{% set leafs = groups['all'] | select('search', 'leaf') | list %}
# ASN Mapping dynamically based on custom fields

AS:
{% for host in groups['all'] %}
{% if host in spines %}
  {{ host }}: "{{ hostvars[leafs[0]].custom_fields.DEVICE_ASN }}"
{% elif host in leafs %}
  {{ host }}: "{{ hostvars[spines[0]].custom_fields.DEVICE_ASN }}"
{% else %}
  {{ host }}: "{{ hostvars[host].custom_fields.DEVICE_ASN | default('null') }}"
{% endif %}
{% endfor %}

{% for idx in range(1, leafs | length) %}
AS{{ idx }}:
{% for spine in spines %}
  {{ spine }}: "{{ hostvars[leafs[idx]].custom_fields.DEVICE_ASN | default('null') }}"
{% endfor %}
{% endfor %}

{% set interfaces = {} %}
{% set device_counts = {} %} {# dicionário para contar interfaces por device #}
{# Loop sobre todas as interfaces no input #}
{% for termination in nb_interfaces.json.results %}
  {% set device_name = termination.termination.device.name %}
  {% set interface_name = termination.termination.name %}
  {% set interface_number = interface_name.split('/')[-1] %}
  {% set key = 'INTERFACE' + interface_number %}
  {# Inicializa o dicionário da interface se não existir #}
  {% if key not in interfaces %}
    {% set _ = interfaces.update({key: {}}) %}
  {% endif %}
  {# Adiciona o device com interface + .0 #}
  {% set _ = interfaces[key].update({device_name: interface_name + '.0' }) %}
  {# Conta interfaces por device #}
  {% if device_name not in device_counts %}
    {% set _ = device_counts.update({device_name: 1}) %}
  {% else %}
    {% set _ = device_counts.update({device_name: device_counts[device_name] + 1}) %}
  {% endif %}
{% endfor %}

interfaces_dynamic:
{% for host in groups['all'] %}
  {{ host }}:
{% for i in range(1, 5) %}
{% set iface_key = 'INTERFACE' ~ i %}
{% if iface_key in interfaces and host in interfaces[iface_key] %}
    - "{{ interfaces[iface_key][host] }}"
{% endif %}
{% endfor %}
{% endfor %}



